@model SchoolLunch.Models.Plan

@{
    ViewBag.Title = "Create";
}

<h2>Create New Plan</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PlanName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlanName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlanName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Entree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Entree, (SelectList)ViewBag.Entree, "-- Select Entree --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Entree, "", new { @class = "text-danger" })
            </div>
        </div>

		<div class="form-group">
			@Html.LabelFor(model => model.Side, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.Side, (SelectList)ViewBag.Side, "-- Select Side --", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.Side, "", new { @class = "text-danger" })
			</div>
		</div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fruit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Fruit, (SelectList)ViewBag.Fruit, "-- Select Fruit --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Fruit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Vegetable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Vegetable, (SelectList)ViewBag.Vegetable, "-- Select Vegetable --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Vegetable, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Beverage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Beverage, (SelectList)ViewBag.Beverage, "-- Select Beverage --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Beverage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dessert, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Dessert, (SelectList)ViewBag.Dessert, "-- Select Dessert --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Dessert, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
